{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/jikanjs/lib/util/Settings.js","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../node_modules/jikanjs/lib/util/Request.js","../../node_modules/jikanjs/lib/jikan.js","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached\n    const children = target.childNodes;\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        const seqLen = upper_bound(1, longest + 1, idx => children[m[idx]].claim_order, current) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        if (node !== target.actual_end_child) {\n            target.insertBefore(node, target.actual_end_child);\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append(target, node);\n    }\n    else if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        node.data = '' + data;\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTag();\n    }\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    return new HtmlTag(html_tag_nodes.slice(1, html_tag_nodes.length - 1));\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(claimed_nodes) {\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            if (this.l) {\n                this.n = this.l;\n            }\n            else {\n                this.h(html);\n            }\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","\r\nclass Settings {\r\n\r\n    constructor(baseURL = 'https://api.jikan.moe', version = 3) {\r\n        this.setBaseURL(baseURL, version);\r\n    }\r\n\r\n    /**\r\n     * Delivers the full API Base URL\r\n     * @returns {URL}\r\n     */\r\n    getBaseURL() {\r\n        return this.baseURL;\r\n    }\r\n\r\n    /**\r\n     * can be used to replace the current API Base URL by a complete new one\r\n     * @param {string} baseURL\r\n     * @param {number} [version]\r\n     */\r\n    setBaseURL(baseURL, version) {\r\n        if(version) this.v = version;\r\n        this.baseURL = new URL(`/v${this.v}`, baseURL);\r\n    }\r\n\r\n    /**\r\n     * can be used to change the API version\r\n     * @param {number} version\r\n     */\r\n    set version(version) {\r\n        this.v = version;\r\n        this.baseURL.pathname = `/v${version}`;\r\n    }\r\n\r\n    /**\r\n     * delivers the currently used API version\r\n     * @returns {number}\r\n     */\r\n    get version() {\r\n        return this.v;\r\n    }\r\n}\r\n\r\nmodule.exports = new Settings();\r\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","//@ts-check\r\n\r\nconst Settings = require('./Settings');\r\nconst fetch = require('cross-fetch');\r\n\r\nclass Request {\r\n\r\n    /**\r\n     * sends a request with the given list of URL parts and the optional list of query parameter\r\n     * @param {*[]} args           URL Parts\r\n     * @param {{}} [parameter]     Query Parameter\r\n     * @returns {Promise<*>} returns the request response or an error\r\n     */\r\n    async send(args, parameter) {\r\n        var response = await fetch(this.urlBuilder(args, parameter));\r\n        var data = await response.json();\r\n\r\n        if (response.status !== 200) return Promise.reject(new Error(data.error));\r\n        return Promise.resolve(data);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*[]} args            URL Parts\r\n     * @param {{}} [parameter]      Query Parameter\r\n     * @returns {string}            URL\r\n     */\r\n    urlBuilder(args, parameter) {\r\n        var url = new URL(Settings.getBaseURL());\r\n\r\n        url.pathname += '/' + args.filter(x => x).join('/');\r\n        if (parameter) Object.entries(parameter).forEach(([key, value]) => url.searchParams.append(key, value));\r\n\r\n        return url.href;\r\n    }\r\n}\r\n\r\nmodule.exports = Request;\r\n","//@ts-check\r\nconst Request               = require('./util/Request');\r\nconst Settings              = require('./util/Settings');\r\n\r\n/**\r\n * Response Types:\r\n *\r\n * 200: OK\r\n * 400: Bad Request             -> invalid endpoint\r\n * 404: Not Found               -> id doesn't exist\r\n * 405: Method Not Allowed      -> wrong request method\r\n * 429: Too Many Requests       -> request limit is hit.\r\n *\r\n * Source: https://jikan.docs.apiary.io/\r\n */\r\n\r\nclass JikanAPI {\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor() {\r\n        this.settings = Settings;\r\n        this.request = new Request();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} id               Anime ID\r\n     * @param {string} [request]       e.g. characters_staff, episodes, news, pictures, videos, stats, forum, moreinfo, reviews, recommendations, userupdates\r\n     * @param {number} [parameter]     can be used to select a specific page for a anime which has more than 100 episodes\r\n     */\r\n    loadAnime(id, request, parameter) {\r\n        return this.request.send(['anime', id, request, parameter]);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {number} id               Manga ID\r\n     * @param {string} [request]       e.g. characters, news, pictures, stats, forum, moreinfo, reviews, recommendations, userupdates\r\n     */\r\n    loadManga(id, request) {\r\n        return this.request.send(['manga', id, request]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} id               Person ID\r\n     * @param {string} [request]       e.g. pictures\r\n     */\r\n    loadPerson(id, request) {\r\n        return this.request.send(['person', id, request]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} id               Character ID\r\n     * @param {string} [request]       e.g. pictures\r\n     */\r\n    loadCharacter(id, request) {\r\n        return this.request.send(['character', id, request]);\r\n    }\r\n\r\n    // TODO add limit as a search Filter\r\n    // TODO rebuild to /search/manga?q=Grand%20Blue&page=1\r\n    /**\r\n     * the query needs to be minimum of 3 letters to be processes by MyAnimeList\r\n     * @param {string} type             only [anime, manga, person, character] allowed - version 1.7.1\r\n     * @param {string} query            Search Query\r\n     * @param {number} [page]\r\n     * @param {{}} [params]             needs to be a key value (Parameter / Argument) pair like: {type: 'tv', status: 'airing'}\r\n     */\r\n    search(type, query, page = null, params = {}, limit = null) {\r\n        if(query.length < 3) return Promise.reject(new Error(`The given query must be of minimum 3 letters! Given query '${query}' has only ${query.length} letters.`));\r\n\r\n        params.q = query;\r\n        if(page) params.page = page;\r\n        if(limit) params.limit = limit;\r\n        return this.request.send(['search', type], params);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} year             year\r\n     * @param {string} season           available types [summer, spring, fall, winter]\r\n     */\r\n    loadSeason(year, season) {\r\n        return this.request.send(['season', year, season]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    loadSeasonArchive() {\r\n        return this.request.send(['season', 'archive']);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    loadSeasonLater() {\r\n        if(this.settings.version < 3) return Promise.reject(new Error('Usable at API version 3+'));\r\n        return this.request.send(['season', 'later']);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} [day]            available type [monday, tuesday, wednesday, thursday, friday, saturday, sunday, other (v3), unknown (v3)]\r\n     */\r\n    loadSchedule(day) {\r\n        return this.request.send(['schedule', day]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} type             available type [anime, manga, people (v3), characters (v3)]\r\n     * @param {number} [page]           page number (50 items are on one Page)\r\n     * @param {string} [subtype]  \t    [Anime] airing, upcoming, tv, movie, ova, special [Manga] manga, novels, oneshots, doujin, manhwa, manhua [both] bypopularity, favorite\r\n     */\r\n    loadTop(type, page, subtype) {\r\n        return this.request.send(['top', type, page, subtype]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} type             available type [anime, manga]\r\n     * @param {number} id               genre ID\r\n     * @param {number} [page]           page number\r\n     */\r\n    loadGenre(type, id, page) {\r\n        if(this.settings.version < 3) return Promise.reject(new Error('Usable at API version 3+'));\r\n        return this.request.send(['genre', type, id, page]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} id               producer ID\r\n     * @param {number} [page]           page number\r\n     */\r\n    loadProducer(id, page) {\r\n        if(this.settings.version < 3) return Promise.reject(new Error('Usable at API version 3+'));\r\n        return this.request.send(['producer', id, page]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} id               magazine ID\r\n     * @param {number} [page]           page number\r\n     */\r\n    loadMagazine(id, page) {\r\n        if(this.settings.version < 3) return Promise.reject(new Error('Usable at API version 3+'));\r\n        return this.request.send(['magazine', id, page]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} username         username\r\n     * @param {string} [request]          [profile, history, friends, animelist, mangalist]\r\n     * @param {string} [data]             addition data see API docs\r\n     */\r\n    loadUser(username, request, data) {\r\n        if(this.settings.version < 3) return Promise.reject(new Error('Usable at API version 3+'));\r\n        return this.request.send(['user', username, request, data]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} id                 Club ID\r\n     */\r\n    loadClub(id) {\r\n        if(this.settings.version < 3) return Promise.reject(new Error('Usable at API version 3+'));\r\n        return this.request.send(['club', id]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} id               Club ID\r\n     * @param {number} [page]           page number. If this will be left empty, the default is 1\r\n     */\r\n    loadClubMembers(id, page) {\r\n        if(this.settings.version < 3) return Promise.reject(new Error('Usable at API version 3+'));\r\n        return this.request.send(['club', id, 'members', page]);\r\n    }\r\n\r\n    /**\r\n     * Related to the Jikan REST Instance. --> see the official Jikan documentation\r\n     * [to get status information use the function loadStatus]\r\n     *\r\n     * @param {string} type             e.g. anime, manga, characters, people, search, top, schedule, season\r\n     * @param {string} period           e.g. today, weekly monthly\r\n     * @param {number} [offset]         1000 request are shown for use the offset\r\n     */\r\n    loadMeta(type, period, offset) {\r\n        return this.request.send(['meta', 'requests', type, period, offset]);\r\n    }\r\n\r\n    /**\r\n     * is for loading the status of the Jikan REST Instance  --> see the official Jikan documentation\r\n     */\r\n    loadStatus() {\r\n        return this.request.send(['meta', 'status']);\r\n    }\r\n\r\n    /**\r\n     * can be used for stuff not yet covered with the current Jikanjs wrapper version\r\n     * @param {Array} urlParts          e.g. [anime, 1] to load the anime with the id of 1\r\n     * @param {Object} [queryParameter] query Parameter. Needs to be a key value pair like {type: 'tv', status: 'airing'}\r\n     */\r\n    raw(urlParts, queryParameter) {\r\n        if(!Array.isArray(urlParts)) return Promise.reject(new Error(`The given parameter should be an array like [anime, 1] but given was ${urlParts}`));\r\n        return this.request.send(urlParts, queryParameter);\r\n    }\r\n}\r\n\r\nmodule.exports = new JikanAPI();\r\n","<script lang=\"ts\">\n\t// import Kofi from './kofi.svelte';\n\timport jikanjs from 'jikanjs';\n\n\tconst randomFromArray = (arr) => {\n\t\treturn arr[Math.floor(Math.random() * arr.length)];\n\t};\n\n\tlet NSFW: boolean = false;\n\tlet minYear = 2016;\n\tlet minScore = 7;\n\n\tconst getSeason = async () => {\n\t\tlet season = randomFromArray(['fall', 'spring', 'winter', 'summer']);\n\t\tlet currentYear = new Date().getFullYear();\n\t\tlet year = Math.floor(Math.random() * (currentYear - (minYear + 1)) + minYear);\n\t\treturn await jikanjs.loadSeason(year, season);\n\t};\n\n\tvar anime;\n\n\tconst getAnime = async () => {\n\t\tvar res = await getSeason();\n\t\tvar count = 0;\n\t\twhile (true) {\n\t\t\tanime = randomFromArray(res.anime);\n\t\t\tvar valid = anime.r18 === NSFW && anime.score >= minScore;\n\t\t\tif (valid) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcount += 1;\n\t\t\tif (count >= 100) {\n\t\t\t\tres = await getSeason();\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t\t// console.log(anime);\n\t};\n\n\tlet promise = getAnime();\n</script>\n\n<svelte:head />\n\n<main class=\"text-white bg-gray-800\">\n\t<div class=\"h-screen\">\n\t\t<div class=\"text-xl p-6\">\n\t\t\t{#await promise}\n\t\t\t\t<div>Loading</div>\n\t\t\t{:then users}\n\t\t\t\t<img class=\"max-h-screen-md\" src={anime.image_url} alt=\"cover\" />\n\t\t\t\t<div class=\"text-3xl my-4 text-green-200\">{anime.title}</div>\n\t\t\t\t<div class=\"my-4 text-2xl\">⭐ {anime.score}</div>\n\t\t\t\t<div class=\"my-4 \">\n\t\t\t\t\t{#each anime.genres as genre}\n\t\t\t\t\t\t{genre.name + ', '}\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"my-4\">\n\t\t\t\t\tEP : {anime.episodes}\n\t\t\t\t</div>\n\t\t\t\t<div>Air Date : {new Date(anime.airing_start).toLocaleDateString()}</div>\n\t\t\t\t<div class=\"my-4 \">\n\t\t\t\t\tStudio :\n\t\t\t\t\t{#each anime.producers as producer}\n\t\t\t\t\t\t{producer.name + ', '}\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-xl text-white\"><a href={anime.url}>MAL link</a></div>\n\t\t\t{:catch error}\n\t\t\t\t<p style=\"color: red\">{error.message}</p>\n\t\t\t{/await}\n\t\t</div>\n\n\t\t<div class=\"absolute bottom-0 left-0 bg-gray-900 w-screen flex flex-row gap-x-5 sm:gap-x-20 items-center justify-around flex-nowrap\">\n\t\t\t<button\n\t\t\t\tclass=\"p-2 border-none bg-blue-800\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tpromise = getAnime();\n\t\t\t\t}}>Random</button\n\t\t\t>\n\n\t\t\t<div>\n\t\t\t\t<input class=\"appearance-none border-transparent w-4 h-4 bg-green-300 checked:bg-red-700 checked:border-transparent transition-all\" style=\"transition-duration: 600ms\" type=\"checkbox\" bind:checked={NSFW} />\n\t\t\t\tNSFW\n\t\t\t</div>\n\n\t\t\t<div class=\"\">\n\t\t\t\tMinimum Rating\n\t\t\t\t<input type=\"number\" min=\"0\" max=\"9\" class=\"text-black p-2\" bind:value={minScore} />\n\t\t\t</div>\n\n      <div class=\"bg-blue-800 p-4\">\n        ☕ Support me\n      </div>\n\t\t</div>\n\t</div>\n</main>\n\n<style></style>\n","import App from './App.svelte';\r\nvar app = new App({\r\n    target: document.body,\r\n    props: {}\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","current_component","is_hydrating","upper_bound","low","high","key","value","mid","append","target","node","hydrate_init","children","childNodes","m","Int32Array","length","p","longest","i","seqLen","idx","claim_order","newLen","Math","max","lis","toMove","last","cur","push","reverse","sort","j","anchor","insertBefore","init_hydrate","undefined","actual_end_child","parentElement","firstChild","nextSibling","parentNode","appendChild","insert","detach","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","important","style","setProperty","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","outros","transition_in","block","local","delete","handle_promise","promise","info","token","type","index","resolved","child_ctx","slice","current","needs_flush","blocks","r","c","o","transition_out","mount","then","error","catch","hasCatch","pending","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","l","intro","customElement","new_on_destroy","map","filter","mount_component","constructor","baseURL","version","this","setBaseURL","getBaseURL","v","URL","pathname","global","self","__self__","F","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","toString","call","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","Headers","headers","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","result","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","arrayBuffer","readAsText","chars","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","hasOwnProperty","thisArg","keys","values","entries","methods","Request","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","send","polyfill","defineProperty","ponyfill","module","args","parameter","urlBuilder","Settings","x","searchParams","href","settings","loadAnime","id","loadManga","loadPerson","loadCharacter","search","query","page","params","limit","q","loadSeason","year","season","loadSeasonArchive","loadSeasonLater","loadSchedule","day","loadTop","subtype","loadGenre","loadProducer","loadMagazine","loadUser","username","loadClub","loadClubMembers","loadMeta","period","offset","loadStatus","raw","urlParts","queryParameter","title","score","episodes","Date","airing_start","toLocaleDateString","genres","producers","image_url","__awaiter","_arguments","P","generator","getAnime","NSFW","minScore","$destroy","destroy_component","$on","splice","$set","$$props","$$set"],"mappings":"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"}